{
  "openapi": "3.0.0",
  "info": {
    "title": "Job Controller",
    "version": "0.0.1",
    "contact": {
      "email": "john@stilen.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1/V1",
      "description": "Development server"
    },
    {
      "url": "https://staging.gigantic-server.com",
      "description": "Staging server"
    },
    {
      "url": "https://api.gigantic-server.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "stations",
      "description": "Station where jobs will run"
    },
    {
      "name": "configs",
      "description": "Operations about configs"
    },
    {
      "name": "jobs",
      "description": "Operations about jobs"
    },
    {
      "name": "logs",
      "description": "Operations about logs"
    },
    {
      "name": "users",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/stations": {
      "get": {
        "tags": [
          "stations"
        ],
        "summary": "Returns a list of stations",
        "operationId": "getStations",
        "responses": {
          "200": {
            "description": "A JSON array of station objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfStations"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error server error"
          },
          "404": {
            "description": "Stations not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "stations"
        ],
        "summary": "Add a station",
        "operationId": "addStation",
        "requestBody": {
          "description": "Station, without unique id produced by server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostStations"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of station objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/SuccessResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/stations/{stationId}": {
      "put": {
        "tags": [
          "stations"
        ],
        "summary": "Change a station",
        "operationId": "updateStation",
        "parameters": [
          {
            "$ref": "#/components/parameters/stationIdParam"
          }
        ],
        "requestBody": {
          "description": "Station, without unique id produced by server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostStations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/ApiResponse"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "stations"
        ],
        "summary": "Deletes a station",
        "operationId": "deleteStations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/stationIdParam"
          }
        ],
        "responses": {
          "400": {
            "description": "Station ID Invalid"
          },
          "404": {
            "description": "Station ID not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "stationIdParam" : {
        "name": "stationId",
        "in": "path",
        "description": "User set Station Identifier",
        "required": false,
        "type": "string"
      }
    },
    "schemas": {
      "PostStations" : {
        "type": "object",
        "properties": {
          "ManufacturingSite" : {
            "description": "Physical location of station",
            "type": "string"
          },
          "JobType": {
            "description": "Type of jobs run on this station",
            "type": "string"
          },
          "StationID": {
            "description": "Family of jobs run on this station",
            "type": "string"
          },
          "NetToSerialMac": {
            "description": "MAC address of station Nic",
            "type": "string"
          }
        }
      },
      "ArrayOfStations": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "ManufacturingSite": {
              "type": "string"
            },
            "JobType": {
              "type": "string"
            },
            "StationID": {
              "type": "string"
            },
            "NetToSerialMac": {
              "type": "string"
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    },
    "responses": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}
